---
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - apache2-utils
        - python3-pip

    - name: Creates directory
      file:
        path: "{{ item }}"
        state: directory
      with_items:
      - certs
      - httpauth
      - registry
      - "/etc/docker/certs.d/{{ myregistry }}:5000"
      - .kube

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Install docker and its dependecies
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
      notify:
        - docker status

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker
    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubectl=1.20.0-00

    - name: Execute command 'openssl'
      command: openssl req -newkey rsa:4096 -nodes -sha256 -keyout certs/domain.key -addext "subjectAltName = DNS:{{ myregistry }}" -subj "/CN={{ myregistry }}/C=TR/ST=TR/L=Istanbul/O=Foo/OU=Bar" -x509 -days 365 -out certs/domain.crt

    - name: Install passlib python package
      pip:
        name: "{{ packages }}"
      vars:
        packages:
        - passlib
        - bcrypt

    - name: Generate the auth file
      shell: "htpasswd -Bbn {{ registryuser }} {{ registrypassword }} > httpauth/htpasswd"

    - name: copy file
      command: cp certs/domain.crt "/etc/docker/certs.d/{{ myregistry }}:5000/ca.crt"

    - name: Lauch the registry container
      shell: docker run -d -p 5000:5000 --restart=always --name registry -v "$(pwd)"/registry:/var/lib/registry -v "$(pwd)"/httpauth:/auth -e "REGISTRY_AUTH=htpasswd" -e "REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm" -e REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd  -v "$(pwd)"/certs:/certs -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/domain.crt -e REGISTRY_HTTP_TLS_KEY=/certs/domain.key registry:2

    - name: update hosts file 
      shell: echo "192.168.50.12 {{ myregistry }}" >> /etc/hosts

    - name: copy config file
      copy: src=./files/config dest=.kube/config mode=0777

    - name: Fetch config file 
      run_once: yes
      fetch: src=certs/domain.crt dest=./files/ca.crt flat=yes

    - name: create docker registry secret
      become: false
      shell: kubectl create secret docker-registry secret-key --docker-server="https://{{ myregistry }}:5000" "--docker-username={{ registryuser }}"  "--docker-password={{ registrypassword }}"
